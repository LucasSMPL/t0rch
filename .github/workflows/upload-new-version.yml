name: Upload New Version to Supabase Bucket

on:
  push:
    branches: ['main']
    paths: ['config.t0rch.json']

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SUPABASE_PROJECT_ID: conqcdxbczhqszglmwyk
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPPORTED_PLATFORMS: |
        ( 
          "darwin-amd64" 
          "windows-386" 
          "linux-arm" 
        )

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Previous Version
        id: previous-version
        run: |
          previous_version=$(git show HEAD~1:config.t0rch.json | jq -r '.version')
          echo ${previous_version}
          echo "previous_version=$previous_version" >> $GITHUB_OUTPUT

      - name: Get current version
        id: current-version
        run: |
          current_version=$(cat config.t0rch.json | jq '.version')
          echo ${current_version}
          echo "current_version={current_version}" >> $GITHUB_OUTPUT
      
      - name: Compare Versions
        uses: jackbilestech/semver-compare@1.0.4
        with:
          head: ${{ steps.current-version.outputs.current_version }}
          base: ${{ steps.previous-version.outputs.previous_version }}
          operator: ">"
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: 1.169.8

      - name: Init Supabase Project
        run: supabase init

      - name: Link Supabase Project
        run: supabase link --project-ref ${{ env.SUPABASE_PROJECT_ID }}

      - name: Upload to Supabase
        run: |
          platforms=${{ env.SUPPORTED_PLATFORMS }}
          for p in ${platforms[*]}
          do
            supabase storage cp ./public/${{ steps.current-version.outputs.version }}/$p.gz ss:///t0rch/${{ steps.current-version.outputs.version }}/$p.gz --experimental
            y | supabase storage rm ss:///t0rch/$p.json --experimental
            supabase storage cp ./public/$p.json ss:///t0rch/ --experimental
          done
