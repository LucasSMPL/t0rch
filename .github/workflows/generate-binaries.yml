name: Generate Binaries

on:
  push:
    branches: ["dev"]
    # branches: ['main']
    # paths: ['config.t0rch.json']

jobs:
  gen_binaries:
    runs-on: ubuntu-latest

    env:
      SUPABASE_PROJECT_ID: conqcdxbczhqszglmwyk
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_SECRET: ${{ secrets.SUPABASE_SECRET }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPPORTED_PLATFORMS: |
        ( 
          "darwin-amd64" 
          "windows-386" 
          "linux-arm" 
        )

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node environment
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ../

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1
        with:
          go-version: 1.22.3

      - name: Install go-selfupdate
        run: go install github.com/sanbornm/go-selfupdate/cmd/go-selfupdate@latest

      - name: Generate Binaries and Upload to Supabase
        run: |
          next_version=$(cat config.t0rch.json | jq -r '.version')
          echo ${next_version}
          platforms=${{ env.SUPPORTED_PLATFORMS }}
          for p in ${platforms[*]}
          do
            split=(${p//-/ })
            goos=${split[0]}
            goarch=${split[1]}
            GOOS=$goos GOARCH=$goarch go build -o tmp/$p
          done
          ~/go/bin/go-selfupdate ./tmp ${next_version}
          platforms=${{ env.SUPPORTED_PLATFORMS }}
          for p in ${platforms[*]}
          do
            curl \
              -X POST "https://${{env.SUPABASE_PROJECT_ID}}.supabase.co/storage/v1/object/t0rch/${next_version}/$p.gz" \
              --header "apikey: ${{env.SUPABASE_SECRET}}" \
              --header "Authorization: Bearer ${{env.SUPABASE_SECRET}}"
              --header "Content-Type: application/octet-stream" \
              --header "x-upsert: true" \
              --data-binary "@./public/${next_version}/$p.gz"
              curl \
              -X POST "https://${{env.SUPABASE_PROJECT_ID}}.supabase.co/storage/v1/object/t0rch/$p.json" \
              --header "apikey: ${{env.SUPABASE_SECRET}}" \
              --header "Authorization: Bearer ${{env.SUPABASE_SECRET}}"
              --header "Content-Type: application/octet-stream" \
              --header "x-upsert: true" \
              --data-binary "@./public/$p.json"
          done
